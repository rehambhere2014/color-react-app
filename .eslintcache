[{"C:\\Users\\reham\\Documents\\react\\projects\\color-copy\\src\\App.js":"1","C:\\Users\\reham\\Documents\\react\\projects\\color-copy\\src\\SingleColor.js":"2"},{"size":1063,"mtime":1606558177397,"results":"3","hashOfConfig":"4"},{"size":808,"mtime":1606558283573,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8","usedDeprecatedRules":"9"},"1sfmnae",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\reham\\Documents\\react\\projects\\color-copy\\src\\App.js",["12"],"import React, { useState, useEffect } from 'react';\nimport Values from 'values.js'\nimport SingleColor from './SingleColor';\n\nfunction App() {\n  const[color , setColor] = useState('');\n  const [list, setList] = useState(new Values('#f15025').all(10))\n const [error, setError] = useState(false)\n  const handleSubmit=(e)=>{\n    e.preventDefault();\ntry{\n  let colors = new Values(color).all(10) ;\n  setList(colors)\n}catch(error){\n  setError(true)\n  console.log(error)\n}\n  }\n  return (\n<>\n<section className='container'>\n  <h3>color generator</h3>\n  <form onSubmit={handleSubmit}>\n          <input\n            type='text'\n            value={color}\n            onChange={(e)=>setColor(e.target.value)}\n            className={`${error ?'error':null}`}\n          />\n          <button className='btn' type='submit'>\n            submit\n          </button>\n        </form>\n\n  </section>\n  <section className=\"colors\">\n    {list.map((item,index)=>{\n      return <SingleColor  {...item} index={index} hexColor={item.hex}/>\n    })}\n  </section>\n</>\n  );\n}\n\nexport default App;\n",["13","14"],"C:\\Users\\reham\\Documents\\react\\projects\\color-copy\\src\\SingleColor.js",[],{"ruleId":"15","severity":1,"message":"16","line":1,"column":27,"nodeType":"17","messageId":"18","endLine":1,"endColumn":36},{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["23"],"no-negated-in-lhs",["24"],"no-global-assign","no-unsafe-negation"]